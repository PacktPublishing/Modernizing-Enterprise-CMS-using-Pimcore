services:
    _defaults:
        autowire: true
        autoconfigure: true

    #
    # SESSION
    #

    # Sessions need to be configured (e.g. adding custom attribute bags) before they are started. The configurator handles
    # a collection of configurator instances which can be added via addConfigurator or by using the pimcore.session.configurator
    # DI tag. See the SessionConfiguratorPass for details.
    Pimcore\Session\SessionConfigurator:
        public: false

    #
    # SECURITY
    #

    # Decorate the symfony encoder factory with our own. Encoders operating on pimcore admin users and pimcore objects using
    # the password field definition need access to the user instance while encoding the password. Our factory allows delegating
    # encoder building to sub-factories which are able to build and cache an encoder per user object.
    #
    # See UserAwareEncoderFactory which is used from the admin bundle and from CMS demo profile.
    #
    # The second argument (factory mapping) is read from config (pimcore.security.encoder_factories) and set by the extension.
    pimcore.security.encoder_factory:
        class: Pimcore\Security\Encoder\EncoderFactory
        decorates: security.encoder_factory
        arguments: ['@pimcore.security.encoder_factory.inner', '@?']
        public: false

    #
    # INFRASTRUCTURE
    #

    # creates needed pimcore directories
    Pimcore\HttpKernel\CacheWarmer\MkdirCacheWarmer:
        public: false
        tags:
            - { name: kernel.cache_warmer }

    Pimcore\Cache\Symfony\CacheClearer:
        public: true

    Pimcore\Helper\LongRunningHelper:
        public: true
        calls:
            - [setLogger, ['@logger']]
        tags:
            - { name: monolog.logger, channel: pimcore }

    #
    # CONFIG
    #
    Pimcore\Config:
        public: true

    Pimcore\Config\ReportConfigWriter: ~

    #
    # CONTROLLERS
    #

    # auto-register all controllers as services
    Pimcore\Bundle\CoreBundle\Controller\:
        resource: '../../Controller'
        public: true
        tags: ['controller.service_arguments']

    Pimcore\Controller\Config\ConfigNormalizer:
        calls:
            - [setRoutingDefaults, ['%pimcore.routing.defaults%']]


    Pimcore\Controller\Config\ControllerDataProvider:
        public : true
        arguments:
            $serviceControllers: '%pimcore.service_controllers%'

    #
    # HTTP/REST clients
    #

    Pimcore\Http\ClientFactory:
        # keep this public until static method was removed
        public: true

    pimcore.http_client:
        alias: GuzzleHttp\Client
        public: true

    GuzzleHttp\Client:
        public: true
        class: \GuzzleHttp\Client
        factory: ['@Pimcore\Http\ClientFactory', createClient]

    pimcore.rest_client:
        deprecated: ~
        alias: Pimcore\Tool\RestClient
        public: true

    Pimcore\Tool\RestClient:
        deprecated: ~
        public: true
        arguments:
            - '@pimcore.http_client'

    # Newsletter Adapter
    pimcore.document.newsletter.factory.default:
      class: Pimcore\Document\Newsletter\DefaultAddressSourceAdapterFactory
      arguments:
        - 'Pimcore\Document\Newsletter\AddressSourceAdapter\DefaultAdapter'

    pimcore.document.newsletter.factory.csv:
      class: Pimcore\Document\Newsletter\DefaultAddressSourceAdapterFactory
      arguments:
        - 'Pimcore\Document\Newsletter\AddressSourceAdapter\CsvList'

    pimcore.document.newsletter.factory.report:
      class: Pimcore\Document\Newsletter\ReportAddressSourceAdapterFactory
      arguments:
        - '@pimcore.custom_report.adapter.factories'

    pimcore.newsletter.address_source_adapter.factories:
        public: true
        class: Symfony\Component\DependencyInjection\ServiceLocator
        tags: ['container.service_locator']


    # CustomReport Adapter
    pimcore.custom_report.adapter.factory.sql:
      class: Pimcore\Model\Tool\CustomReport\Adapter\DefaultCustomReportAdapterFactory
      arguments:
        - 'Pimcore\Model\Tool\CustomReport\Adapter\Sql'

    pimcore.custom_report.adapter.factory.analytics:
      class: Pimcore\Model\Tool\CustomReport\Adapter\DefaultCustomReportAdapterFactory
      arguments:
        - 'Pimcore\Model\Tool\CustomReport\Adapter\Analytics'

    pimcore.custom_report.adapter.factories:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        public: true
        tags: ['container.service_locator']


    # DataObject Consent Service
    Pimcore\DataObject\Consent\Service:
        public: true

    Pimcore\Translation\ExportDataExtractorService\ExportDataExtractorServiceInterface:
        class:  Pimcore\Translation\ExportDataExtractorService\ExportDataExtractorService

    Pimcore\Translation\ExportService\ExportServiceInterface:
        class:  Pimcore\Translation\ExportService\ExportService

    Pimcore\Translation\ExportDataExtractorService\DataExtractor\DataObjectDataExtractor:
        tags: [{name: pimcore.translation.data-extractor, type: object}]

    Pimcore\Translation\ExportDataExtractorService\DataExtractor\DocumentDataExtractor:
        tags: [{name: pimcore.translation.data-extractor, type: document}]

    Pimcore\Translation\ExportService\Exporter\ExporterInterface:
        class: Pimcore\Translation\ExportService\Exporter\Xliff12Exporter

    Pimcore\Translation\ImporterService\ImporterServiceInterface:
        class: Pimcore\Translation\ImporterService\ImporterService

    Pimcore\Translation\ImporterService\Importer\DataObjectImporter:
        tags: [{name: pimcore.translation.importer, type: object}]

    Pimcore\Translation\ImporterService\Importer\DocumentImporter:
        tags: [{name: pimcore.translation.importer, type: document}]

    Pimcore\Translation\ImportDataExtractor\ImportDataExtractorInterface:
        class: Pimcore\Translation\ImportDataExtractor\Xliff12DataExtractor

    Pimcore\Translation\ImportDataExtractor\TranslationItemResolver\TranslationItemResolverInterface:
        class: Pimcore\Translation\ImportDataExtractor\TranslationItemResolver\TranslationItemResolver

    Pimcore\Translation\Escaper\Xliff12Escaper: ~

    Pimcore\Model\DataObject\ClassDefinition\ClassDefinitionManager:
        public: true

    Pimcore\Model\DataObject\ClassDefinition\ClassLayoutDefinitionManager:
        public: true

    # Override Swiftmailer redirecting plugin
    swiftmailer.plugin.redirecting.abstract:
        abstract: true
        class: Pimcore\Mail\Plugins\RedirectingPlugin

    Pimcore\Model\DataObject\QuantityValue\UnitConversionService:
        public: true

    Pimcore\Model\DataObject\QuantityValue\QuantityValueConverterInterface:
        public: true
        class: Pimcore\Model\DataObject\QuantityValue\DefaultConverter

    Pimcore\Bundle\CoreBundle\Request\ParamConverter\DataObjectParamConverter:
        tags:
            - { name: request.param_converter, priority: -2, converter: data_object_converter }

    Symfony\Component\Lock\PersistingStoreInterface:
        class: Symfony\Component\Lock\Store\PdoStore
        arguments:
            - '@database_connection'

    Symfony\Component\Lock\Store\RetryTillSaveStore:
        arguments:
            - '@Symfony\Component\Lock\PersistingStoreInterface'
            - 1000

    Symfony\Component\Lock\LockFactory:
        public: true
        class: Symfony\Component\Lock\Factory
        arguments:
            - '@Symfony\Component\Lock\Store\RetryTillSaveStore'

    Symfony\Component\Lock\Factory:
        public: true
        alias: Symfony\Component\Lock\LockFactory
